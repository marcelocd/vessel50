version: '3'
services:
  postgres:
    image: postgres:14.2-alpine
    container_name: postgres_container
    command: postgres -p 54321
    volumes:
      - ./db_data:/data/postgres
    environment:
      - POSTGRES_DB=vessel50_development
      - POSTGRES_USER=marcelo
      - POSTGRES_PASSWORD=password123456789
      - PGDATA=/data/postgres
    networks:
      - vessel-network
    restart: unless-stopped

  redis:
    image: 'redis:7.2.1-alpine'
    command: redis-server
    volumes:
      - './web/redis:/data'
    networks:
      - vessel-network

  sidekiq:
    depends_on:
      - 'postgres'
      - 'redis'
    build: './web'
    command: bundle exec sidekiq
    volumes:
      - './web:/rails'
      - '/rails/tmp'
    environment:
      - REDIS_URL_SIDEKIQ=redis://redis:6379/1
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vessel50_development
      - POSTGRES_USER=marcelo
      - POSTGRES_PASSWORD=password123456789
      - POSTGRES_PORT=54321
    networks:
      - vessel-network

  web:
    depends_on:
      - postgres
      - redis
    build: ./web
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"
    volumes:
      - './web:/rails'
      - '/rails/tmp'
      - '/rails/db'
    environment:
      - RAILS_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=vessel50_development
      - POSTGRES_USER=marcelo
      - POSTGRES_PASSWORD=password123456789
      - POSTGRES_PORT=54321
      - REDIS_URL_SIDEKIQ=redis://redis:6379/1
    networks:
      - vessel-network

  web2:
    build: ./web2
    ports:
      - "8000:8000"
    volumes:
      - './web2:/django'
    networks:
      - vessel-network

volumes:
  postgres:
  redis:

networks:
  vessel-network:
    driver: bridge
